-- DROP
DROP TABLE IF EXISTS ROSTER CASCADE;
DROP TABLE IF EXISTS TEAM CASCADE;
DROP TABLE IF EXISTS PLAYER CASCADE;
DROP TABLE IF EXISTS TOURNAMENT CASCADE;
DROP TABLE IF EXISTS RESULT CASCADE;
DROP TABLE IF EXISTS BRACKET CASCADE;
DROP TABLE IF EXISTS PARTICIPANT CASCADE;
DROP TABLE IF EXISTS MATCH CASCADE;
DROP TABLE IF EXISTS ROLE CASCADE;
DROP TABLE IF EXISTS TALENT CASCADE;
-- CREATE
CREATE TABLE TEAM(
    t_id SERIAL PRIMARY KEY,
    t_name VARCHAR(60),
    t_tag VARCHAR(10),
    t_region SMALLINT,
    t_created DATE,
    t_image VARCHAR(256)
  );
CREATE TABLE PLAYER (
      p_id SERIAL PRIMARY KEY,
      p_nick VARCHAR(20) NOT NULL UNIQUE,
      p_name VARCHAR(60),
      p_surname VARCHAR(60),
      p_country VARCHAR(2),
      p_birth DATE,
      p_mmr INTEGER,
      p_image VARCHAR(256)
  );
CREATE TABLE TOURNAMENT (
      tr_id SERIAL PRIMARY KEY,
      tr_name VARCHAR(60) NOT NULL,
      tr_date DATE NOT NULL,
      tr_enddate DATE,
      parent_tr_id INTEGER,
      FOREIGN KEY(parent_tr_id) REFERENCES TOURNAMENT(tr_id) ON DELETE SET NULL
  );
CREATE TABLE BRACKET(
      br_id SERIAL PRIMARY KEY,
      br_type BOOLEAN,
      br_stage SMALLINT,
      br_index SMALLINT,
      tr_id INTEGER,
      br_name VARCHAR(60) NOT NULL,
      FOREIGN KEY(tr_id) REFERENCES TOURNAMENT(tr_id) ON DELETE SET NULL
  );
CREATE TABLE PARTICIPANT(
      tr_id INTEGER,
      t_id INTEGER,
      qualifier_id INTEGER,
      FOREIGN KEY(tr_id) REFERENCES TOURNAMENT(tr_id) ON DELETE SET NULL,
      FOREIGN KEY(t_id) REFERENCES TEAM(t_id) ON DELETE SET NULL,
      FOREIGN KEY(qualifier_id) REFERENCES TOURNAMENT(tr_id) ON DELETE SET NULL
  );
CREATE TABLE MATCH(
      m_id SERIAL PRIMARY KEY,
      t_id INTEGER,
      t_id_2 INTEGER,
      br_id INTEGER,
      m_type SMALLINT,
      m_index SMALLINT,
      t_1_score SMALLINT,
      t_2_score SMALLINT,
      FOREIGN KEY (t_id)  REFERENCES TEAM(t_id) ON DELETE SET NULL,
      FOREIGN KEY(t_id_2) REFERENCES TEAM(t_id) ON DELETE SET NULL,
      FOREIGN KEY(br_id) REFERENCES BRACKET(br_id) ON DELETE SET NULL
  );
  CREATE TABLE ROLE(
      rl_id SERIAL PRIMARY KEY,
      role VARCHAR(60),
      priority SMALLINT
  );
CREATE TABLE TALENT(
      p_id INTEGER NOT NULL,
      tr_id INTEGER NOT NULL,
      rl_id INTEGER NOT NULL,
      lang VARCHAR(2) NOT NULL,
      FOREIGN KEY (p_id)  REFERENCES PLAYER(p_id) ON DELETE CASCADE,
      FOREIGN KEY(tr_id) REFERENCES TOURNAMENT(tr_id) ON DELETE CASCADE,
      FOREIGN KEY(rl_id) REFERENCES ROLE(rl_id) ON DELETE CASCADE
  );
CREATE TABLE RESULT(
      p_id INTEGER NOT NULL,
      t_id INTEGER NOT NULL,
      tr_id INTEGER NOT NULL,
      placement INTEGER,
      dpc_points REAL,
      prize INTEGER,
      FOREIGN KEY(p_id) REFERENCES PLAYER(p_id) ON DELETE SET NULL,
      FOREIGN KEY(t_id) REFERENCES TEAM(t_id) ON DELETE SET NULL,
      FOREIGN KEY(tr_id) REFERENCES TOURNAMENT(tr_id) ON DELETE SET NULL
  );
CREATE TABLE ROSTER(
      p_id INTEGER NOT NULL,
      t_id INTEGER NOT NULL,
      join_date DATE NOT NULL,
      leave_date DATE,
      position INTEGER,
      is_captain BOOLEAN NOT NULL,
      FOREIGN KEY(p_id) REFERENCES PLAYER(p_id) ON DELETE SET NULL,
      FOREIGN KEY(t_id) REFERENCES TEAM(t_id) ON DELETE SET NULL
  );
